apiVersion: apps/v1
kind: Deployment
metadata:
  name: backstage
  namespace: {{ .Values.namespace }}
  labels:
    app: backstage
    {{- include "backstage.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backstage.replicas }}
  selector:
    matchLabels:
      app: backstage
  template:
    metadata:
      labels:
        app: backstage
    spec:
      serviceAccountName: {{ include "backstage.serviceAccountName" . }}
      volumes:
        - name: backstage-config
          projected:
            sources:
              - secret:
                  name: integrations
                  items:
                    - key: github-integration.yaml
                      path: github-integration.yaml
              - configMap:
                  name: backstage-config
                  items:
                    - key: app-config.yaml
                      path: app-config.yaml
              - secret:
                  name: k8s-config
                  items:
                    - key: k8s-config.yaml
                      path: k8s-config.yaml
      containers:
        - name: backstage
          image: "{{ .Values.backstage.image.repository }}:{{ .Values.backstage.image.tag }}"
          imagePullPolicy: {{ .Values.backstage.image.pullPolicy }}
          command:
            - node
            - packages/backend
            - --config
            - config/app-config.yaml
          ports:
            - name: http
              containerPort: {{ .Values.backstage.config.backend.listen.port }}
          resources:
            {{- toYaml .Values.backstage.resources | nindent 12 }}
          volumeMounts:
            - name: backstage-config
              mountPath: "/app/config"
              readOnly: true
          envFrom:
            - secretRef:
                name: backstage-env-vars
            - secretRef:
                name: postgresql-config