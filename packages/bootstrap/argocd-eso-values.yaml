# Used for bootstraping hub cluster with ArgoCD and ESO
syncPolicy:
  automated:
    selfHeal: true
    allowEmpty: true
    prune: false
    
argocd:
  enabled: true
  chartName: argo-cd
  namespace: argocd
  releaseName: argocd
  defaultVersion: "8.0.14"
  chartRepository: "https://argoproj.github.io/argo-helm"
  valuesObject:
    global:
      domain: '{{ if eq .metadata.labels.path_routing "true" }}{{ .metadata.annotations.domain }}{{ else }}argocd.{{ .metadata.annotations.domain }}{{ end }}'
    server:
      ingress:
        annotations: 
          cert-manager.io/cluster-issuer: '{{ if eq .metadata.labels.path_routing "false" }}"letsencrypt-prod"{{ end }}'
        path: '/{{ if eq .metadata.labels.path_routing "true" }}argocd{{ end }}'
    configs:
      params:
        'server.basehref': '/{{ if eq .metadata.labels.path_routing "true" }}argocd{{ end }}'
        'server.rootpath': '{{ if eq .metadata.labels.path_routing "true" }}argocd{{ end }}'
  additionalResources:
  - path: true
    manifestPath: "manifests"
    type: "manifests"
  - path: true 
    manifestPath: "path-routing" # this should be commented if not using path routing
    type: "manifests"
  selector:
    matchExpressions:
      - key: clusterName
        operator: In
        values: ['hub']
      - key: path_routing # this should be commented if not using path routing
        operator: In
        values: ['true']

external-secrets:
  enabled: true
  enableAckPodIdentity: false
  namespace: external-secrets
  chartName: external-secrets
  defaultVersion: "0.17.0"
  chartRepository: "https://charts.external-secrets.io"
  # additionalResources:
  #   path: "charts/fleet-secret"
  #   type: "ecr-token"
  #   helm:
  #    releaseName: ecr-token
  additionalResources:
  - path: true
    manifestPath: "manifests"
    type: "manifests"
  selector:
    matchExpressions:
      - key: clusterName
        operator: In
        values: ['hub']
  # selector:
  #   matchExpressions:
  #     - key: enable_external_secrets
  #       operator: In
  #       values: ['true']
  # valuesObject:
  #   installCRDs:  '{{default toBool(true) toBool((index .metadata.labels "use_external_secrets"))}}'
  #   serviceAccount:
  #     name: "external-secrets-sa"
  #     annotations:
  #       eks.amazonaws.com/role-arn: '{{default "" (index .metadata.annotations "external_secrets_iam_role_arn")}}'
